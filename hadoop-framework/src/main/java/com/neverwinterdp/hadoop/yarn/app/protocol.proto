// How to generate
// ===============
// $ protoc src/main/java/com/neverwinterdp/hadoop/yarn/app/protocol.proto --java_out=src/main/java

/**
 * DESIGN, REQUIREMENT AND KNOWN PROBLEMS:
 * 
 *
 **/

option java_generic_services = true;
option java_package = "com.neverwinterdp.hadoop.yarn.app";
option java_outer_classname = "protocol";

enum ProcessStatus {
  INIT       = 0;
  RUNNING    = 1;
  DESTROY    = 2;
  TERMINATED = 3;
}

message AppContainerStatus {
  required int32          containerId     = 1; 
  required int64          startTime       = 2; 
  optional int64          finishTime      = 3 [default = -1]; 
  optional ProcessStatus  processStatus   = 4 [default = INIT]; 
  optional double         progress        = 5 [default = 0 ]; 
  optional string         statusMessage   = 6; 
  optional string         errorStacktrace = 7; 
}

message AppContainerStatusList {
  repeated AppContainerStatus containerStatus = 1;
}

message AppContainerInfoList {
  repeated AppContainerInfo containerInfo = 1;
}

message AppContainerReport {
  required int32   containerId     = 1; 
  required string  name            = 2; 
  optional string  description     = 3; 
  required string  type            = 4; 
  required bytes   data            = 5; 
}


message AppContainerInfo {
  required AppContainerStatus status  = 1;
  repeated AppContainerReport reports = 2;
}

message AppMasterStatus {
  required int64          startTime     = 1; 
  optional int64          finishTime    = 2; 
  required ProcessStatus  processStatus = 3 [default = INIT]; 
}

message AppMasterInfo {
  required AppMasterStatus status     = 1;
  optional AppAggregatedReport report = 2;
}

message AppAggregatedReport {
  required string  description     = 1; 
  required string  type            = 2; 
  required bytes   data            = 3; 
}

message Ack {
  enum Status {
    OK    = 0;
    ERROR = 1;
  }
  optional Status status  = 1 [default = OK];
  optional string message = 2; 
}

message Void { }

service IPCService {
  rpc updateAppContainerStatus(AppContainerStatus) returns (Ack);

  rpc updateAppContainerReport(AppContainerReport)   returns (Ack);

  rpc getAppContainerStatusList(Void)   returns (AppContainerStatusList);
  rpc getAppContainerInfoList(Void)   returns (AppContainerInfoList);

  rpc getAppMasterStatus(Void)   returns (AppMasterStatus);
  rpc getAppMasterInfo(Void)     returns (AppMasterInfo);
}
